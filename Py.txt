print("Hello World")
print(' ----  -------')
print('|         |')
print('|         |')
print(' ---- ----')
print('CJ '*10)
p_name = 'John Smith'
p_age = 20
is_new = True
print(is_new)
name = input('name?')
color = input('fav color?')
print(name  + ' likes ' + color)
w_kg = input('Weight in Kgs:')
w_lb = float(w_kg) * 2.205
print(w_lb )

first = 'Dwayne'
last = 'Johnson'
 message = f'{first} [{last}] '
print(message)

string = 'Python is Awesome'
print(len(string))

string = 'Python is Awesome'
print(string.upper())

string = 'Python is Awesome'
print(string.find('P'))                  # will return index number of a string

string = 'Python is Awesome'
print(string.replace('is','is fucking'))

string = 'Python is Awesome'
print('Py' in string)              # in is a test to find whether characters exist in string. Returns boolean value.

print(2**5)    # 2 power 5

print(10//3)   # double slash returns integer value.

x = (2+3) * 10 - 3
print(x) # return 47  Operator precedence will follow paranthesis,exponential,multiplication or division, addition or subtraction.

import math
print(math.floor(2.99)) # math is a python module. methods can be used after importing just like java packages.

loan_amount = 1000000
cibil_score = False

if cibil_score :
    print('Loan is granted.')
else:
    print('Loan is rejected.')
print('Thanks for banking with us') # syntax of if statement is if condition:---elif:----else:---

loan_amount = 1000000
cibil_score = 700

if cibil_score >= 700:

    print('Loan is granted.')
else:
    print('Loan is rejected.')
print('Thanks for banking with us') # Logical operators include AND, OR, NOT
# Comparison operators include >=,<=,==(equals to) whereas =(Assignment operator), !=(not equal to)

loan_amount = 1000000
cibil_score = int(input('enter your cibil score:'))

if cibil_score >= 700:

    print('Loan is granted. Congratulations')
else:
    print('Loan is rejected. As your Cibil score is less than 700')
print('Thanks for banking with us')

name = int(len(input('Please Enter your Name:')))
name_min = 3

if 50 > name >= 3:
    print("Name looks good")
elif name > 50:
    print("More than 50 characters are not allowed")
elif name <3:
    print("Name should be atlest 3 characters")
''' elif name_min >=3:
    print("display name must be atleast 3 characters")
else:
    print("Name looks good!") '''

 name = 'Cherry'
if len(name) < 3:
     print('Name must be atleast 3 characters')
elif len(name) > 50:
     print('Name cannot exceed more than 50 characters')
else:
     print('Volila! Name looks good.')


#Weight Converter Program

weight = 'Weight:'
input1 = int(input(weight))
#unit1 = print(type(input1))
metric = input('(L)bs or (K)gs:')
#unit = print(type(metric))

if   metric.upper() == 'L':             #upper() converts l to capital L and matches the if condition.
     conv = input1 * 0.45
     print(f"You are {conv} Kgs")
elif metric.upper() == 'K':
     kg2p = input1 // 0.45              # as per Google converter, pound to kg divide mass value by 2.205. kg to pound multiply mass value by 2.205
     print(f"You are {kg2p} pounds")

#While Loop
i = 1
while i <=5:
    print('*' * i)
    i = i + 1
print('Exited from Loop.')

# Guessing Game

lucky_number = 9
i = 0
while i < 3:
    guess = int(input("Guess:"))
    i = i + 1
    if guess == lucky_number:
        print("You Won!")
        break
else:
    print("Sorry you loose!")


# Car Game
print("Please type help for instructions.")
enter = input('>')
if enter.upper() == 'HELP':
    print("Start - to start the car")
    print("Stop - to stop the car")
    print("Quit - to exit")
else:
    print("I don't Understand.")


i = 0
started = False
while i<=10:
    car_status = input(">").upper()
    i=i+1
    if car_status == 'START':
        if started:
            print("Car is already started")
        else:
            started = True
        print("Car Started...Ready to go!")
    elif car_status == 'STOP':
        if not started:
            print("Car is already stopped")
        else:
            started = False
        print("Car Stopped")
    elif car_status == 'QUIT':
        print("Terminated the Program")
        break

#Simple total sum
bill = [10, 20, 30]
total = sum(bill)
print(total)

#for loop
for i in range(0,10,2):
    print(i)

prices = [10, 20, 30]
total = 0
for price in prices:
    total += price
print(f"Total: {total}")

#Nested Loop

for x in range(4):
    for y in range(3):
        print(f"({x}, {y})")

#Prints letter F by using nested for loop

numbers = [5, 2, 5, 2, 2]
for i in numbers:
  output = ''
  for j in range(i):
      output += 'x'
  print(output)

# To find the largest number in a list.

number = [2,8,1,9,10]
print(f"The largest number is: {max(number)}")

#2D List Matrix

matrix = [
    [1,2,3],
    [4,5,6],
    [7,8,9]
]
matrix[2][2] = 12
print(matrix[2][2])
for row in matrix:
    for i in row:
        print(i)

#Program to remove duplicates

list = [2,2,3,3,4,4,5,5]
uniques = []
for i in list:
    if i not in uniques:
        uniques.append(i)
print(uniques)

#tuples

tup = (1,2,3,3,3,3)
print(tup.index(3,3))

#Unpacking

coordinates = (1,2,3)
x,y,z = coordinates
print(x,y)

#Dictionaries

dic = {
    "name": "Bruce Wayne",
    "age": 28,
    "have_access": True

}
print(dic.get("name"))

#Convert numbers to word

ip = input("Enter numbers: ")

dic = {
    "1":"One",
    "2":"Two",
    "3":"Three",
    "4":"Four",
    "5":"Five",
    "6":"Six",
    "7":"Seven",
    "8":"Eight",
    "9":"Nine",
    "0":"Zero"

}
output = ""
for i in ip:
    output += dic.get(i,"!") + " "
print(output)

#Emoji Converter

ip = input(">")
words = ip.split(' ')
dic = {
    ":)":"😊",
    ":(":"😒",
    "wink":"😜",
    "like":"👍",
    "okay":"👌",
    "victory":"✌",
    "fingers crossed":"🤞",
    "cool":"😎",
    "clap":"👏",
    "kiss":"💋"
}
output = ""
for i in words:
    output += dic.get(i,i) + " "
print(output)

#User Defined Functions

def greet(first_name, last_name):
    print(f'Hi {first_name} {last_name}')
    print("Hello from user defined function side 😂")


greet(last_name="Tej", first_name="Charan")

#Function to find square root

def square(number):
    return print(number * number)


square(5)

#Function for Percentage calculator

def perc_calc(number,percent):
    return print(number * 100/ percent)


perc_calc(511000,30)

#Emoji User defined function

def emoji(message):
    words = ip.split(' ')
    dic = {
        ":)":"😊",
        ":(":"😒",
        "wink":"😜",
        "like":"👍",
        "okay":"👌",
        "victory":"✌",
        "fingers crossed":"🤞",
        "cool":"😎",
        "clap":"👏",
        "kiss":"💋"
    }
    output = ""
    for i in words:
        output += dic.get(i,i) + " "
    return output


ip = input(">")
print(emoji(ip))

#Exception Handling

try:
    age = int(input("Age: "))
    take_home = 582000
    monthly = take_home/0
except ValueError:
    print('Invalid Value')
except ZeroDivisionError:
    print('Cannot divide by 0')


#Class

class Point:
    def move(self):
        print("Move")    # Class allows to define new methods

    def draw(self):
        print("Draw")


point1 = Point()       # Object can be created by using class name and paranthesis and assign to variable
point1.x = 10          # Arguments can be passed to created methods.
point1.y = 20
print(point1.y)
point1.move()

point2 = Point()      # Every Object has different instances of class.
point2.x = 12
print(point2.x)
point2.move()        # Move() method from Point class have 2 different instances

#Class with Constructor

class Point:
    def __init__(self,x,y): #Constructor is defined which will initializes the x,y arguments
        self.x =x
        self.y =y
    def move(self):
        print("Move")

    def draw(self):
        print("Draw")


point1 = Point(10,20)

print(point1.y)
point1.move()

point2 = Point(10,20)

print(point2.x)
point2.draw()

class Person:
    def __init__(self, name):
        self.name = name
    def talk(self):
        print(f"Hi, I'm {self.name}")


v1 = Person("Charan Tej")
v1.talk()

v2 = Person("Qlik")
v2.talk()

#Inheritance

class Mammal:
    def walk(self):
        print("Walk Inherited from Mammal")


class Dog(Mammal):
    def bark(self):
        print("Dog Barks")


class Humans(Mammal):
    def talk(self):
        print("Human's Talk")


dog = Dog()
dog.walk()
dog.bark()

human = Humans()
human.walk()
human.talk()


#Module.py different file

def perc_calc(number,percent):
    return print(number * 100/ percent)


#perc_calc(511000,30)


def square(number):
    return print(number * number)


#square(5)

#Main file

import Module  #Module is a seperate file that can be imported and access functions defined in it any program.

print(Module.square(3))

#Utils.py
def find_max(numbers):

    max = numbers[0]
    for i in numbers:
        if i > max:
            max = i
    return max


numbers = [10, 3, 6, 2]
print(max)

#Main
import  utils

print(utils.find_max([10,20]))

#Packages

#Right Click on project and create new package and create module and define functions in that file/Module.

def calc_shipping():
    print("Calculation of Shipping")

#Main file 

import ecommerce.shipping
ecommerce.shipping.calc_shipping() #Package.module.method format

or

from ecommerce.shipping import calc_shipping #importing methods and using directly in program

calc_shipping()

or

from ecommerce import shipping #importing module and using module.method format

shipping.calc_shipping()

#Generating random values with buit in random Module

import random

for i in range(3):
 print(random.random())
 print(random.randint(10,20))


members = ["Charan","EY","MS","Lloyd"]
print(random.choice(members))

# roll a Dice Game

import random
class Dice:
    def roll(self):
       first = random.randint(1,6)
       second = random.randint(1,6)
       return first,second


obj = Dice()
print(Dice.roll(obj))

#Path Module

from pathlib import Path


path = Path("ecommerce")
for file in path.glob('*'):
    print(file)

#All packages from Pip will be installed in following location
Project -> External Libraries -> site-packages 
